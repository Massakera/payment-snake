services:
  # Load balancer
  nginx:
    image: nginx:alpine
    ports:
      - "9999:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "50MB"
    restart: unless-stopped

  # Application instance 1
  app1:
    build: .
    image: rinha-sub-app:latest
    container_name: rinha-app1
    networks:
      - payment-processor
    depends_on:
      - postgres
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100MB"
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1

  # Application instance 2
  app2:
    build: .
    image: rinha-sub-app:latest
    container_name: rinha-app2
    networks:
      - payment-processor
    depends_on:
      - postgres
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100MB"
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: payments
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "100MB"
    restart: unless-stopped
    command: >
      postgres
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c max_worker_processes=2
      -c max_parallel_workers_per_gather=1
      -c max_parallel_workers=2
      -c max_parallel_maintenance_workers=1

  # Redis service
  redis:
    image: redis:7-alpine
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "30MB"
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  payment-processor:
    external: true 